#!/bin/bash
#==========================================================================
#2015_09_18_11:17:34   星期五   add by greshem
#1. rabbit  mq  1to1 1toN  NtoN 的测试 
#    rabbit mq route 做成可以配置. 

#2. cron 的处理.  
#3.   get_mon_data(dateFrom, dateTo, tenant_id): 
#    5分钟 获取 峰值的 代码

#4.   cdn/cdn_resource.py  的修改 单独部署. 
        数据的整合.

#==========================================================================
#2015_09_17_10:14:05   星期四   add by greshem
1. sqlalchemy  可以ORM 的地方重构一下
#2. 再另外 搞 一个分区   用来测试 两个分区的问题. 
#    多区的测试, 
#3. 

#==========================================================================
#2015_09_16_09:23:22   星期三   add by greshem
#1.  mysql 的锁,   for update  扣费的时候的用法.  
#    扣费 update  
#    lockmode
#    select  * form  routers  for update; 
 
#2.  __init__.py 放到 每个 目录 做成包的方式 
#3. 代码 路径的调整 文件名 重新命名一下,   

#==========================================================================
#2015_09_15_11:27:32   星期二   add by greshem
#1. get_last_hour get_cur_hour  断言 必然相等  hour 从apschudler 里面 

2. cdn 的收费逻辑 现在 按照  每天 收费 还是 按照 每月收费?  
    添加 cron 的  程序  每月 cdn 运行. 

#3. route_1 router_1 区别掉,  收集数据的时候

4. 环境的验证,  数据库是否 存在, 字段是否 存在,  
    数据库 迁移的脚本自己写一个. 
    用sqlalchemy 的方式. 

#5. dbsync  

#5.  重构  本地的消息的缓存,  

#==========================================================================
#2015_09_14_09:47:12   星期一   add by greshem
#1.  分区 也作为一个变量 进行处理
#    分布的不同的价格. 

#2.  asp 的报错的问题 解决一下, logger 的问题, 
#3.  新 环境下部署的测试  测试一下 新环境部署. 

#4.  credit_line 的修改 , 超出 以后 需要 把帐号 冻结掉. 
#5.  cdn 合入. 
#6.  account_id 和 user_id 的区别 合并入. 

#==========================================================================
#2015_09_11_07:55:17   星期五   add by greshem
#1. asp cron 做成  cron 的模式 一个月一次

#2. mq_buffer 数据库里面的线程,  重发 线程, 进程, 
#        也做成定时的方式,  一个小时左右吧  
    #几个功能函数 都做成    cron 的方式的函数. 
    最后做成 fork 的方式, 


#7.  扣费  完成 之后 返回  cash_balance or  gift_balance  
    #    credit_line 也 添加进入 扣费 的逻辑里面. 

#4.  扣费的逻辑 扣费 全部完成之后的报错, gift_balance 扣完之后  需要报错了, 
#        hook 函数 去停止 这台虚机了.  
#11.  cdn 合入  代码合入 
#     cdn  数据库存成 sql 的方式 , 数据存成 cache   便于快速获取.  
#12.  cdn 的收费的方式, 配置文件 的方式, config.ini cdn_billing_mode=daily 
#13.  cdn 数据 获取缓慢 如何提速, 通过mysql缓存 数据的方式  加速, 
#        tree_resource.py cdn 资源信息的获取. 
#        get_cdnbandwidth.py  
#        get_cdnflow_1_G.py  函数完成掉. 


#==========================================================================
#2015_09_10_09:59:28   星期四   add by greshem
#1. 鲍国栋的代码的合并  修改了一个字段.  
#2. get_region 开始 合并入代码 这个比较简单, 
#2. consumption 扣费记录的  测试 工具  

#3. 小时 转换成 timestamp 的start  end  的方式. 
#    python mysql 的timestamp 的方式. 
#    参看 "mysql_timestamp_DEFAULT.txt" 

#5.  发送的消息的存档, 接受到 ack 信息之后 在本地的 数据库里面  删除掉. 
#6.  start end 从 小时修改成  start  end 字符串. 

8. receiver_ack.py  的代码的重构,  with 的语法 
#        进一步改进, 

#A9.  update_local_mq_status 代码 进行过一步修改, 

#10. 几个进程 之间的协作的模式,   tree_resource.py   receiver.py  receiver_ack.py  
#11. 扣费过了 就不要 再扣费了,   导致   consumption 数据库里面重复, 


#==========================================================================
#2015_09_09_07:22:07   星期三   add by greshem
#1.  消费 记录 存档 处理完毕 再发送消息 
#    扣费记录 计算 
#    uuid 的处理 有些资源 没有 uuid 添加  处于 instances 一起的表 里面的instance 
#A    一条 总的消息 为 一个uuid 
#1. collecter/ 目录下 长连接 修改完成
    本地目录下的 长连接 也修改一下. 

2.  资源的获取 全部返回 list  不区别对待,  
#3.  对于一个用户  折扣 是针对 不同的资源的 不同的资源 不一样  折扣也不一样

#4.  发送 接受的时候  消息的确认 是否收到 , 处理过

5.  'bandwidth_1_M':    'yuan/M.hour', 
    4096M 的价格的计算 count 的计算.  4096/1024 的逻辑 

#6.  扣费的扣费的浮点数  和str 之间的转换.  assert ok 
7.  instance  关机的逻辑, 关机情况下的扣费, 
#9.  根据  billing_item 来决定 最后的discount  
#10. 每条消息扣费的消息 如何回传,   
#        ack 回传之后 在 数据库中 标记 删除,  status=delete 

#10.  billing_item_str_to_id 的转换. 




#==========================================================================
#2015_09_08_10:15:30   星期二   add by greshem
#1. 日志 系统 加入
#    需要的地方 添加日志, 
#2. 异常的获取 
    #已经报错 日志

#3. 价格 计算 系统  折扣等等  
#4. billing 的用户 和  keystone 的用户 构造 并联系 起来 
#        便于测试 ， 否则  test_cpu_payment 的 获取 核数 总是 为0,
        倒是 总是不能扣费.   测试. 

#5. session  切换 数据库的 代码行  还是要添加  一下, 
#    session.execute("use neutron");

#6. 以 billing_item  作为 关键的数据库,   文件名 的命名 也做成 这种方式. 
#7. 晚上 测试的时候  需要把 keystone 里面的 信息全部 添加进来 同步一下 
#    数据库 进一步的修改 便于 测试. 
#8. 扣费 通过 sql update 的方式 过于 简单   
    #进一步的装饰 ,  assert 


#==========================================================================
#2015_09_07_12:33:58   星期一   add by greshem
#1. 鲍国栋 的 orm dao 代码的合入. accountDao  ok ,  
    #其他 几个也需要合入.  billing_item 


#3.  收费项  收费之后 需要存档  存到sql 数据库中  using 表中去. 

#4.  折扣的代码重构一下,  discount 通过  billing_orm/ 里面的例子 进行重构. 
#        折扣相关的函数, 
#        这个用户的折扣是否存在, 不存在 折扣为100% 
#    price.py 相关的函数解决掉, 

#5.  遍历的时候  究竟使用的是那个    以instance 还是 user_id 作为 里面的 主键 
#    现在的处理还有问题吗? 
#6.   长连接 解决掉, 速度可以提高5倍. 
#6. 计算的时候  对于 词典的检查,防御编程,  
#    不允许  'cdnwidthband_1_M'等 之外的 key 键值. 


#8. 重构:  最后  资源类的获取的文件   最后 都放到  collecter 目录面 

#==========================================================================
#2015_09_06_11:19:21   星期日   add by greshem
#1. 配置文件 写法 
#    配置文件定出来, 区域信息在配置文件里面.  

#2.  image的写法,  image 收费方式的处理逻辑 
#        简化处理. 

#3.  发送的消息本地 留一份   保存状态,   
#        保存 消息 状态,  

#4.  cdn 代码 整合进入   
        #user id 和  cdn 的接口的 user id 如何做到对应. 

#5. session 代码重构
    #数据库的连接 依赖 config.ini 配置文件. 

#7.  tree_resource.py 用 mysql  pconn 的方式 重写一下 测试 速度的变化. 
    #下标 用 billing_item 的数据库的字段 作为key
    # 发送  时候的  dict 的转换 用 鲍国栋的 数据库 来做  key  
#
#8.  数据库的检测  变化的检测  陈记星的字段 是否存在, 
#    cdn 数据库是否存在  并导入, 
#    严佳佳 sql 数据库  代码合入.  doc/
#    sql 的优化， 多表join 的方式查询  减少代码. 
        #collecter_v2/ 解决掉了.

#9.  数据库 扣费的代码 写好, 考虑是不是 使用  orm 的方式. 解决. 
#10. get_discount,  做成有参数的方式, uuid 作为参数 
       

#==========================================================================
#2015_09_02_08:49:33   星期三   add by greshem
#1. 获取 这个用户的折扣, 没有 折扣为100% 
#2. 系统盘 云盘的 逻辑 再进行整理 一下  分清楚,  
#3.  分区 也要作为一个参数 , 不过 在中心节点上结算    张安伟 负责. 
4.  ha mysql 不能连接 报错,  mq 不能连接 报错,  

#5.  配置文件的写法 ini 配置文件 config.ini  mysql 连接方式  还有 rabbitmq 
#        的连接的方式. 

#6. sqlalchemy 去掉 , 用 最简单的sql 的驱动 来写 代码. 
#7. price.py  的代码重构 去除    冗余的代码. 

#8. 计费端  接受 到了消息 并处理完了  给   程序 发一个ACK 取人的 消息
        然后 等待 进入 下一个小时  否则 这个小时算  没有完成任务. 
#9. 添加 一些 断言,   代码防御 


#==========================================================================
#2015_09_01_10:04:00   星期二   add by greshem
#1. 把 消息 发送 函数 写成 类的方式 
#2. json 的代码 整理出来. 
#3.block_device_mapping.py 用来查找 instance 下挂载的活动 磁盘. 
#4. vpn  的信息 dump 统计一下. 

#5. 返回的 disk 是一个列表 然后 对磁盘 类型 需要 再进一步连加 他们的 
#    总的磁盘大小. 

6.  volumes_attachment  作为 系统盘  数据盘的 凭证  最后只能是辅助 证明 , 
        这张表 同步一下  获取一下. 

#7.  dict 的分割   用  dict  分割的问题 ,  dict 选取  list 作为键值 然后 再
#        返回 一个新的dict   用于 

#8.  上个 小时 应该扣费吗? 这个函数 写完 ,  
    
#==========================================================================
#2015_08_31_11:17:37   星期一   add by greshem
#1. 扣费 信息的 记录 本地 数据库的记录 制作成   hash 的方式  
#        key-value 的方式, 在本地 存一份.  


    #小时格式是这样的 2015_03_24_1
#2. 消息的发送 按照  json 的格式.    便于解析  
#3. 数据库的连接 代码 重复 代码 或者 以 session 作为 一个参数  
#    message queue的发送也做 sesson 的方式  否则每次 发送 MESSAGE 都要 连接 
#        速度太慢了. 

4. ha 的考虑, 如何做? 

#5. 每条 消息的整理  数据的发送 
#6.  price 代码的重构 ,  
#7.  get_cdn.py   get_tenant_id_flows 

#==========================================================================
#2015_08_27_11:07:39   星期四   add by greshem
#1. 更新  鲍国栋的 sql  代码生成一下. 
#2. 发送消息 更新一下.  联调一下
#		#不同的网络  调试一下.
#	#和 nova 一起 何用 rabbitmq 会有问题吗? 
#3.  上个小时是否扣费的判断? 
#    当前时间 适不适合扣费.   get_last_hour 
#    time 

#4.  虚机 上个小时 活动了多少时间 应该不应该扣费?  一个小时之内 虚机 多次重启. 
#5.  磁盘扣费的 消息. 
    
#6.  有些 扣费信息 需要 在页面上对比 确认一下.  dashboard   上面去 确认一下
#        对比一下, 测试对比 

#7.  收费项枚举类型  作为参数  在 每个地方   
#        get_money(ENUM);

#8.  校验的问题 数据一致性的问题  宕机的问题  程序 崩溃的问题 
     连接 不上  rabbitmq 的问题. 

#9.  cron 的 模式 修改一下, 或者 变成   5分钟  10分钟 运行一次  
#        消息可以一直发送  但是  计算 价格的程序  对消息进行校验  
#        上个小时 已经扣费 那么 就忽略 这个消息了 不进行处理了. 

#10. 代码的聚合 代码的重构的问题  
    #mysql 用长连接  还是短链接   有些代码要分割 清楚. 
    #insert_billing_info_2_mysql(msg): 
    #直接调用 get_money 职责 没有分开 耦合性  有点唐突. 


#11. dict_to_str 的方式 修改一下, 获取 dict 的 key value 的方式 更加合适. 
#        依赖于鲍国栋的表的熟悉. 
#       dict_to_json 
#12. 函数: 这个小时 是不是在对应的 折扣 区间 之内?  
#    扣费 上一个小时的 就可以了. 
#13. def:   获取  这一秒对应的 小时,  
#14. 上个小时 扣费过了 存成 数据库 dbm,  前面一个小时的
#        程序 关闭 , 然后 如何计算  保存的 dbm 是 好几个小时之前的了
#        上个小时, 扣费的依据是什么? 

#15.  磁盘的获取  系统盘   云硬盘  快照  
#        在数据库里面的确认. 

#16.  insert python 代码的生成. 
    

#==========================================================================
#2015_08_26_09:48:39   星期三   add by greshem

#1. sqlalchemy  insert 语句. 
#    级联的问题 结局掉. 
#2. 鲍国栋的 insert 语句 解决掉
#3. 鲍国栋 的 数据库的导入, 带上 demo 数据. 
#4. 鲍国栋的实例数据的完善.  
#5. collector 数据  是 insert 还是 消息发送  还是 两者 互备.  

#3. rabbitmq  kombu 的用法 解决一下.
#4. time datetime 用法, 用于 扣费信息的校验的流程. 
#5. 发布一个消息,  一个小时 "project_uuid   instance_uuid 一个小时扣费 " 在 kombu_mq/ 
#6. 接受消息. 在 kombu_mq/ 
